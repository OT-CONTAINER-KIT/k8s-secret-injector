---
trigger: 
  - master

pr:
  branches:
    include:
    - master

stages:
- stage: precheck
  jobs:
    - job: govet
      dependsOn: []
      pool:
        vmImage: "ubuntu-18.04"
      steps:
        - task: GoTool@0
          displayName: "Installing Golang"
          inputs:
            version: '1.16'
        - task: Go@0
          displayName: "Executing go vet"
          inputs:
            command: 'custom'
            customCommand: 'vet'

- stage: code_quality
  dependsOn: ["precheck"]
  jobs:
    - job: golang_ci_lint
      dependsOn: []
      pool:
        vmImage: "ubuntu-18.04"
      steps:
        - task: GoTool@0
          displayName: "Installing Golang"
          inputs:
            version: '1.16'
        - script: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.40.0
            ./bin/golangci-lint run --timeout 5m0s ./...
          displayName: "Executing golang-ci lint"

- stage: dockerfile_lint
  dependsOn: ["precheck"]
  jobs:
    - job: dockerfile_lint
      dependsOn: []
      pool:
        vmImage: "ubuntu-18.04"
      steps:
        - script: scripts/dockerfile-linter.sh
          displayName: "Executing dockerlinter"

- stage: build
  dependsOn: ["code_quality"]
  jobs:
    - job: linux_amd64
      dependsOn: []
      pool:
        vmImage: "ubuntu-18.04"
      steps:
        - task: GoTool@0
          displayName: "Installing Golang"
          inputs:
            version: '1.16'
        - task: Go@0
          displayName: "Executing go build"
          inputs:
            command: 'build'
            arguments: '-o $(Agent.BuildDirectory)/k8s-secret-injector'
        - task: ArchiveFiles@2
          displayName: 'Archiving go binary'
          inputs:
            rootFolderOrFile: '$(Agent.BuildDirectory)/k8s-secret-injector'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/compiled/k8s-secret-injector-linux-amd64.zip'
            replaceExistingArchive: true
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/compiled'
            ArtifactName: 'drop'
            publishLocation: 'Container'

- stage: build_image
  dependsOn: ["dockerfile_lint"]
  jobs:
    - job: linux_amd64
      dependsOn: []
      steps:
      - task: Docker@2
        displayName: "Building docker image"
        inputs:
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: '$(Build.BuildId)'
